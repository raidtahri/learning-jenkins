pipeline {
    agent any
    tools {
        maven 'maven3.9'
    }
    environment {
        IMAGE_NAME = 'hello-maven-app'
    }

    stages {
        stage('Increment Version') {
            steps {
                dir('09-hello-maven-versioning-pipeline') {
                    echo 'Parsing and incrementing Maven project version'
                    sh '''
                        mvn build-helper:parse-version versions:set \
                        -DnewVersion=\\${parsedVersion.majorVersion}.\\${parsedVersion.minorVersion}.\\${parsedVersion.nextIncrementalVersion} \
                        versions:commit
                    '''
                }
            }
        }

        stage('Extract Version') {
            steps {
                dir('09-hello-maven-versioning-pipeline') {
                    echo 'Extracting Maven project version'
                    script {
                        def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'
                        def version = matcher[0][1]
                        echo "Project version: ${version}"
                        env.IMAGE_TAG = "$version-$BUILD_NUMBER"
                    }
                }
            }
        }
        stage('Build App') {
            steps {
                dir('09-hello-maven-versioning-pipeline') {
                echo 'Building the app with Maven'
                sh 'mvn clean package'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                 dir('09-hello-maven-versioning-pipeline') {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    echo 'Building Docker Image'
                    sh "docker build -t ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG} ."
                }
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_PASS'
                )]) {
                    echo 'Pushing Docker Image to Docker Hub'
                    sh """
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                        docker logout
                    """
                }
            }
        }
    }
}


